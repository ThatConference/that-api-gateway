name: CI on Push Master

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Gateway API for deploy
    uses: thatconference/that-gh-actions/.github/workflows/build-validate-api.yml@main
    with:
      apiName: gateway
      isForDeploy: true
      branchName: ${{ github.ref_name }}
    secrets:
      SLACK_WEBHOOK_DEV_NOTIFICATIONS: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}

  deploy:
    name: Deploy Gateway API to Google Run
    needs: build
    uses: thatconference/that-gh-actions/.github/workflows/deploy-api.yml@main
    with:
      apiName: gateway
      runMemory: 256Mi
      gcpSecretName: prod-api-gateway-env
    secrets:
      GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SLACK_WEBHOOK_DEV_NOTIFICATIONS: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
  
  graphcdn:
    name: Update GraphCDN rules
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v1
        with:
          name: tc-api
          path: __build__
      - name: Use node.js 14x
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Push to GraphCDN
        run: |
          cd __build__
          npm set-script prepare ""
          npm ci --only=production
          npx graphcdn push
        env:
          GRAPHCDN_TOKEN: ${{ secrets.GRAPHCDN_TOKEN }}
          CI: true
          HUSKY: 0


  notifications:
    name: Workflow notifications
    needs: [build,deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,eventName,ref,workflow
          status: ${{ job.status }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: always()
